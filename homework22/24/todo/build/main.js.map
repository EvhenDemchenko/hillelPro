{"version":3,"file":"main.js","mappings":";UAAA;UACA;;;;;WCDA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8DAA8D,gCAAgC;AAC9F,sDAAsD,4CAA4C,IAAI,YAAY;AAClH;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,mDAAmD,GAAG;AACtD;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,GAAG;AACtD;AACA;AACA;AACA,aAAa;AACb,kCAAkC,sCAAsC;AACxE,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC,C;;;;;;;;;;ACnGD","sources":["webpack://todo/webpack/bootstrap","webpack://todo/webpack/runtime/make namespace object","webpack://todo/./src/js/main2.js","webpack://todo/./src/scss/index.scss"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","class Todo {\n    constructor(props) {\n        this.input = document.querySelector(props.input);\n        this.todosWrapper = document.querySelector(props.todosWrapper);\n        this.form = document.querySelector(props.form);\n        this.init()\n    }\n\n    async init() {\n        await this.loadFromServer();\n        this.form.addEventListener('submit', (event) => {\n            event.preventDefault();\n            this.addServerItem();\n        })\n    }\n\n    createTemplate(description, checked, id) {\n        const item = document.createElement('div');\n        item.classList.add('todo-item');\n        item.classList.add('js--todo-item');\n        item.dataset.id = id;\n\n        item.innerHTML = (\n            `<label class=\"todo-item__label\">\n                <input type=\"checkbox\" class=\"js--complete\" ${checked ? 'checked=\"true\"' : ''}>\n                <p class=\" todo-item__desc js--desc ${checked ? 'todo-item__desc--underline' : ''}\">${description}</p>\n             </label>\n             <button class=\"form__button js--delete\">Удалить</button>`\n        );\n\n        item.querySelector('.js--delete').addEventListener('click', () => this.delete(id, item));\n        item.querySelector('.js--complete').addEventListener('click', (event) => {\n            this.complete(event, description, id, item)\n        })\n        return item;\n    }\n\n\n    async addServerItem() {\n        const response = await fetch((\"http://localhost:3000/todos\"), {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"id\": Math.floor(Math.random() * Number.MAX_SAFE_INTEGER),\n                \"text\": this.input.value,\n                \"checked\": false,\n            })\n        })\n        const dataItem = await response.json();\n        this.todosWrapper.appendChild(this.createTemplate(\n            dataItem.text,\n            dataItem.checked,\n            dataItem.id\n        ))\n        this.input.value = '';\n    }\n\n    async loadFromServer() {\n        const response = await fetch(\"http://localhost:3000/todos\", {\n            method: \"GET\"\n        });\n        this.todosWrapper.innerHTML = '';\n        const data = await response.json();\n        data.forEach(dataItem => {\n            this.todosWrapper.appendChild(this.createTemplate(\n                dataItem.text,\n                dataItem.checked,\n                dataItem.id\n            ))\n        })\n    }\n\n    async delete(id, item) {\n        await fetch(`http://localhost:3000/todos/${id}`, {\n            method: 'DELETE'\n        })\n        item.remove();\n    }\n\n    async complete(event, description, id, item) {\n        let state = !event.target.checked !== true;\n        const currentItem = item.querySelector('p');\n        await fetch(`http://localhost:3000/todos/${id}`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\"checked\": state, \"text\": description})\n        })\n        state ? currentItem.classList.add('todo-item__desc--underline') : currentItem.classList.remove('todo-item__desc--underline');\n    }\n}\n\nnew Todo({\n    input: '.js--form__input',\n    todosWrapper: '.js--todos-wrapper',\n    form: '.js--form'\n})","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}