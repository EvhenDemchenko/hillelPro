{"version":3,"file":"main.f0fbe5ebc4c9f9b77964.js","mappings":"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","sources":["webpack://homework/webpack/bootstrap","webpack://homework/webpack/runtime/make namespace object","webpack://homework/./src/main.js","webpack://homework/./src/style.scss?bc3b"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const wrapper = document.querySelector('.wrapper');\nconst input = document.querySelector('.input');\nconst requestBtn = document.querySelector('.btn1');\nconst btn2 = document.querySelector('.btn2')\n\nconst updateArray = [];\n\nbtn2.addEventListener('click', (e) => {\n    wrapper.innerHTML = ``;\n    UpdateData(e)\n})\n\nrequestBtn.addEventListener('click', e => {\n    e.preventDefault()\n    sendRequest(input.value)\n    input.value = '';\n})\n\nfunction sendRequest(city) {\n    const URL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=5d066958a60d315387d9492393935c19`\n    fetch(URL, {\n        method: 'GET'\n    }).then(res => {\n        if (res.ok) {\n            updateArray.push(city);\n            return res.json();\n        } else {\n            console.log(res);\n            console.error(res.statusText);\n        }\n    }).then(res => {\n        renderTemplate(res);\n    })\n}\n\nfunction UpdateData(event) {\n    event.preventDefault();\n    updateArray.forEach(item => {\n        const URL = `https://api.openweathermap.org/data/2.5/weather?q=${item}&units=metric&APPID=5d066958a60d315387d9492393935c19`\n        fetch(URL, {\n            method: 'GET'\n        }).then(res => {\n            return res.json()\n        }).then(res => {\n            reRender(res)\n        })\n    })\n}\n\nfunction clickHref() {\n    wrapper.addEventListener('click', (event) => {\n        if (event.target.classList.contains('href')) {\n            event.preventDefault();\n            event.target.closest('.href').nextElementSibling.classList.toggle('closed');\n        }\n    });\n}\n\nclickHref()\n\nfunction reRender(data) {\n    wrapper.innerHTML += `\n    <div class=\"card col-1\" style=\"width: 18rem;\">\n            <img class=\"card-img-top weather-img img-card\" src=\"https://openweathermap.org/img/w/${data.weather[0].icon}.png\" alt=\"Card image cap\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title  weather-city\"> Weather in ${data.name} </h5>\n                <p class=\"card-text weather-description\"> ${data.weather[0].description}</p>\n            </div>\n            <ul class=\"list-group list-group-flush\">\n                <li class=\"list-group-item\"> Now tempreture : <b>${Math.round(data.main.temp)}&deg;</b> </li>\n                <li class=\"list-group-item\"> Min temperature : <b>${Math.round(data.main.temp_min)}&deg;</b></li>\n                <li class=\"list-group-item\"> Max temperature : <b>${Math.round(data.main.temp_max)}&deg;</b></li>\n            </ul>\n            <ul class=\"list-group\">\n                <a class=\"href link-info\" href=\"#\"> more info </a>\n                <div class=\"inner closed\">\n                    <li class=\"list-group-item\">Wind Speed : ${Math.round(data.wind.speed)} km/h</li>\n                    <li class=\"list-group-item\">Presure : ${data.main.pressure} hPa </li>\n                    <li class=\"list-group-item\">Humidity : ${data.main.humidity} %</li>\n                </div>\n            </ul>\n        </div>`;\n}\n\nfunction renderTemplate(data) {\n    wrapper.insertAdjacentHTML('beforeend', `\n    <div class=\"card col-1\" style=\"width: 18rem;\">\n            <img class=\"card-img-top weather-img img-card\" src=\"https://openweathermap.org/img/w/${data.weather[0].icon}.png\" alt=\"Card image cap\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title  weather-city\"> Weather in ${data.name} </h5>\n                <p class=\"card-text weather-description\"> ${data.weather[0].description}</p>\n            </div>\n            <ul class=\"list-group list-group-flush\">\n                <li class=\"list-group-item\"> Now tempreture : <b>${Math.round(data.main.temp)}&deg;</b> </li>\n                <li class=\"list-group-item\"> Min temperature : <b>${Math.round(data.main.temp_min)}&deg;</b></li>\n                <li class=\"list-group-item\"> Max temperature : <b>${Math.round(data.main.temp_max)}&deg;</b></li>\n            </ul>\n            <ul class=\"list-group\">\n                <a class=\"href link-info\" href=\"#\"> more info </a>\n                <div class=\"inner closed\">\n                    <li class=\"list-group-item\">Wind Speed : ${Math.round(data.wind.speed)} km/h</li>\n                    <li class=\"list-group-item\">Presure : ${data.main.pressure} hPa </li>\n                    <li class=\"list-group-item\">Humidity : ${data.main.humidity} %</li>\n                </div>\n            </ul>\n        </div>`\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":["wrapper","document","querySelector","input","requestBtn","btn2","updateArray","addEventListener","e","innerHTML","UpdateData","preventDefault","sendRequest","value","city","URL","fetch","method","then","res","ok","push","json","console","log","error","statusText","renderTemplate","event","forEach","item","reRender","clickHref","target","classList","contains","closest","nextElementSibling","toggle","data","weather","icon","name","description","Math","round","main","temp","temp_min","temp_max","wind","speed","pressure","humidity","insertAdjacentHTML"],"sourceRoot":""}